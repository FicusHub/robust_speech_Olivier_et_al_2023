# General information
seed: 1001
__set_seed: !apply:torch.manual_seed [!ref <seed>]
root: !PLACEHOLDER
tokenizers_folder: !ref <root>/tokenizers

# Hyparameters below are dependant on the attack and model used 
# and should be changed at the user's discretion
# -------------------------------------------------------------
# Attack information
snr: 30
nb_iter: 1
attack_class: !name:robust_speech.adversarial.attacks.pgd.SNRPGDAttack
  targeted: False
  snr: !ref <snr>
  nb_iter: !ref <nb_iter>
save_audio: False

# Model information
model_name: asr-crdnn-transformerlm-librispeech
attack_name: pgd
target_brain_class: !name:robust_speech.models.seq2seq.S2SASR
target_brain_hparams_file: !ref model_configs/<model_name>.yaml
# source_brain_class: null
# source_brain_hparams_file: null

# Tokenizer information (compatible with target and source)
# pretrained_tokenizer_path: !ref speechbrain/<model_name>
pretrained_tokenizer_path: !ref <root>/trainings/conformer/1006/save/CKPT+2022-05-01+00-32-32+00
tokenizer: !new:sentencepiece.SentencePieceProcessor

# eval smoothing
enable_eval_smoothing: True
eval_smoothing_sigma: 0.01
# filter config
filter_config:
  filter_package: robust_speech.adversarial.filters.ASNRWiener
  filter_class: ASNRWiener
  sr: 16000
  hop: 160
  nfft: 320
voting_config:
  voting: rover_freq
  rover_iters: 3 
  rover_path: /home/ubuntu/SCTK/bin/rover

# -------------------------------------------------------------

# Pretrainer loading parameters

pretrained_path: !ref <root>/trainings/<model_name>

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
   collect_in: !ref <tokenizers_folder>/<model_name>
   loadables:
      tokenizer: !ref <tokenizer>

   paths:
      tokenizer: !ref <pretrained_tokenizer_path>/tokenizer.ckpt


output_folder: !ref <root>/attacks/<attack_name>/<model_name>/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>
log: !ref <output_folder>/log.txt
save_audio_path: !ref <output_folder>/save

dataset_prepare_fct: !name:robust_speech.data.librispeech.prepare_librispeech
dataio_prepare_fct: !name:robust_speech.data.librispeech.dataio_prepare

# Data files
data_folder: !ref <root>/data/LibriSpeech # e.g, /localscratch/LibriSpeech
csv_folder: !ref <data_folder>/csv # e.g, /localscratch/LibriSpeech
# If RIRS_NOISES dir exists in /localscratch/xxx_corpus/RIRS_NOISES
# then data_folder_rirs should be /localscratch/xxx_corpus
# otherwise the dataset will automatically be downloaded
test_splits: ["test-clean"]
skip_prep: True
ckpt_interval_minutes: 15 # save checkpoint every N min
data_csv_name: test-clean
test_csv:
   - !ref <data_folder>/csv/<data_csv_name>.csv
batch_size: 1 # This works for 2x GPUs with 32GB
avoid_if_longer_than: 24.0
sorting: random

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 80

# Decoding parameters (only for text_pipeline)
blank_index: 0
bos_index: 1
eos_index: 2

test_dataloader_opts:
    batch_size: 1

logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <log>
